"""
This type stub file was generated by pyright.
"""

class Functorisor:
    """A Functorisor is a wrapper around an ordinary function that carries
    information about the return type of that function. Specifically
    it wraps functions that return an applicative functor. In haskell
    notation:

        func :: a -> Applicative b

    This is neccessary because some functions want to access the result of
    `pure :: b -> Applicative b` without having an `a` to call the function
    with (and thereby being unable to determine which `b` to call `pure` on,
    which the Python implementation requires).

    The Functorisor solves this problem by carrying around a `pure`
    function. It's a hack, but it works well enough."""
    __slots__ = ...
    def __init__(self, pure_func, func) -> None:
        ...
    
    def __call__(self, arg):
        ...
    
    def map(self, f): # -> Functorisor:
        ...
    
    def update(self, fn): # -> Functorisor:
        ...
    



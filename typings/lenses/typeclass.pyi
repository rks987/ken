"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, TypeVar
from functools import singledispatch

A = TypeVar("A")
B = TypeVar("B")
@singledispatch
def mempty(monoid: Any) -> Any:
    ...

@singledispatch
def mappend(monoid: Any, other: Any) -> Any:
    ...

@singledispatch
def fmap(functor: Any, func: Callable[[Any], Any]) -> Any:
    """Applies a function to the data 'inside' a functor.

    Uses functools.singledispatch so you can write your own functors
    for use with the library."""
    ...

@singledispatch
def pure(applicative: Any, item: B) -> Any:
    ...

@singledispatch
def apply(applicative: Any, func: Any) -> Any:
    ...

